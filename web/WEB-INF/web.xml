<?xml version="1.0" encoding="UTF-8"?>
<!--该文档用的是xsd的约束,Spring用的也是这种约束-->
<!--约束文档引用官方的文档作为显示的命名空间，如果要使用官方提供的属性或者元素，必须在开头加xsi-->
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
    version="4.0">
    <!--全局初始化参数(web项目初始化的时候就对ServletContext中的内容初始化)-->
    <context-param>
        <param-name>count</param-name>
        <param-value>0</param-value>
    </context-param>

    <context-param>
        <param-name>dbURL</param-name>
        <param-value>jdbc:mysql://localhost:3306/test</param-value>
    </context-param>
    <context-param>
        <param-name>dbuser</param-name>
        <param-value>root</param-value>
    </context-param>
    <context-param>
        <param-name>dbpassword</param-name>
        <param-value>123000</param-value>
    </context-param>
    
    <!--设置filter过滤器-->

    <filter>
        <filter-name>FilterTest</filter-name>
        <filter-class>test.FilterTest</filter-class>
        <init-param>
            <param-name>test</param-name>
            <param-value>hello</param-value>
        </init-param>
    </filter>
    <!--在这里过滤器的过滤对象可以选择两种模式，
    (1) 第一种模式是根据url的地址进行过滤 ，当访问web资源时直接对url地址进行过滤
    (2) 第二种是根据Servlet的name进行过滤-->
    <filter-mapping>
        <filter-name>FilterTest</filter-name>
        <!--对于url地址的过滤可以设置多个需要过滤的url地址-->
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>
    <!--在这里对Servlet的过滤可以直接用Servlet的类名进行映射-->
    <filter-mapping>
        <filter-name>FilterTest</filter-name>
        <servlet-name>AccountServlet</servlet-name>
    </filter-mapping>

    <!--注册用户登陆时是否需要自动登陆的filter-->
    <filter>
        <filter-name>LoginFilter</filter-name>
        <filter-class>filter.LoginFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>LoginFilter</filter-name>
        <url-pattern>/userLogin.jsp</url-pattern>
    </filter-mapping>

    <!--编码过滤器-->
    <filter>
        <filter-name>EncodingFilter</filter-name>
        <filter-class>filter.EncodingFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>EncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--设置web的监听器-->
    <listener>
        <listener-class>listener.AppContextAttributeListener</listener-class>
    </listener>
    <listener>
        <listener-class>listener.AppContextListener</listener-class>
    </listener>
    <listener>
        <listener-class>listener.MySessionListener</listener-class>
    </listener>
    <listener>
        <listener-class>listener.MyServletRequestListener</listener-class>
    </listener>
    <!--测试Servlet-->
    <servlet>
        <servlet-name>HelloMyServlet</servlet-name>
        <servlet-class>servlet.HelloServlet</servlet-class>
        <!--针对于每一个Servlet初始化时候的参数-->
        <init-param>
            <param-name>namespace</param-name>
            <param-value>1</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>HelloMyServlet</servlet-name>
        <url-pattern>/helloServlet</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file></welcome-file>
        <welcome-file></welcome-file>
        <welcome-file></welcome-file>
    </welcome-file-list>
    
    <!--测试用的MyServlet-->
    <servlet>
        <servlet-name>MyServlet</servlet-name>
        <servlet-class>servlet.MyServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>MyServlet</servlet-name>
        <url-pattern>/myServlet</url-pattern>
    </servlet-mapping>
    <!--用户登陆Servlet-->
    <servlet>
        <servlet-name>UserServlet</servlet-name>
        <servlet-class>servlet.UserServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>UserServlet</servlet-name>
        <url-pattern>/userServlet</url-pattern>
    </servlet-mapping>
    
    <!--测试读取properties属性文件的Servlet-->
    <servlet>
        <servlet-name>ReadPropertiesServlet</servlet-name>
        <servlet-class>servlet.ReadPropertiesServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>ReadPropertiesServlet</servlet-name>
        <url-pattern>/readPropertiesServlet</url-pattern>
    </servlet-mapping>
    
    <!--测试response的Servlet类-->
    <servlet>
        <servlet-name>PrintServlet</servlet-name>
        <servlet-class>response.PrintResponse</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>PrintServlet</servlet-name>
        <url-pattern>/printServlet</url-pattern>
    </servlet-mapping>
    
    <!--产生验证码图片的Servlet-->
    <servlet>
        <servlet-name>VerifyCodeServlet</servlet-name>
        <servlet-class>servlet.VerifyCodeServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>VerifyCodeServlet</servlet-name>
        <url-pattern>/verifyCodeServlet</url-pattern>
    </servlet-mapping>
    
    <!--显示登陆时间的测试demo-->
    <servlet>
        <servlet-name>VisitServlet</servlet-name>
        <servlet-class>servlet.VisitServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>VisitServlet</servlet-name>
        <url-pattern>/visitServlet</url-pattern>
    </servlet-mapping>
    <!--转账的测试demo-->
    <servlet>
        <servlet-name>AccountServlet</servlet-name>
        <servlet-class>servlet.AccountServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>AccountServlet</servlet-name>
        <url-pattern>/accountServlet</url-pattern>
    </servlet-mapping>

    <!--查询所有商品的servlet-->
    <servlet>
        <servlet-name>ProductFindAllServlet</servlet-name>
        <servlet-class>servlet.ProductFindAllServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>ProductFindAllServlet</servlet-name>
        <url-pattern>/productFindAllProduct</url-pattern>
    </servlet-mapping>
    
    <!--添加商品的demo-->
    <servlet>
        <servlet-name>AddProdcutServlet</servlet-name>
        <servlet-class>servlet.AddProductServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>AddProdcutServlet</servlet-name>
        <url-pattern>/addProductServlet</url-pattern>
    </servlet-mapping>
    
    <!--根据id查询商品的servlet-->
    <servlet>
        <servlet-name>FindProductByIdServlet</servlet-name>
        <servlet-class>servlet.FindProductByIdServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>FindProductByIdServlet</servlet-name>
        <url-pattern>/findProductById</url-pattern>
    </servlet-mapping>
    
    <!--修改商品信息demo的serlvet-->
    <servlet>
        <servlet-name>ProductEditServlet</servlet-name>
        <servlet-class>servlet.ProductEditServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>ProductEditServlet</servlet-name>
        <url-pattern>/productEditServlet</url-pattern>
    </servlet-mapping>
    
    <!--分页查询数据的demo的Servlet-->
    <servlet>
        <servlet-name>FindDataByPageServlet</servlet-name>
        <servlet-class>servlet.FindDataByPageServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>FindDataByPageServlet</servlet-name>
        <url-pattern>/findDataByNumber</url-pattern>
    </servlet-mapping>
    
    <!--根据商品名和商品属性查找的demo的Servlet-->
    <servlet>
        <servlet-name>FindProductByNameAndCid</servlet-name>
        <servlet-class>servlet.FindProductByNameAndCidServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>FindProductByNameAndCid</servlet-name>
        <url-pattern>/findProductByNameAndCid</url-pattern>
    </servlet-mapping>
    
    <!--ajax验证用户名是否存在的demo的Servlet-->
    <servlet>
        <servlet-name>UserCheckServlet</servlet-name>
        <servlet-class>servlet.UserCheckServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>UserCheckServlet</servlet-name>
        <url-pattern>/userCheckServlet</url-pattern>
    </servlet-mapping>
    
    <!--模糊条件查询商品-->
    <servlet>
        <servlet-name>FindProductByWordServlet</servlet-name>
        <servlet-class>servlet.ProductFindByWordServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>FindProductByWordServlet</servlet-name>
        <url-pattern>/findProductByWordServlet</url-pattern>
    </servlet-mapping>
    
    <!--测试重定向的Servlet配置-->
    <servlet>
        <servlet-name>ServletTest</servlet-name>
        <servlet-class>test.ServletTest</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>ServletTest</servlet-name>
        <url-pattern>/servletTest</url-pattern>
    </servlet-mapping>
    
    <servlet>
        <servlet-name>ForwardServletTest</servlet-name>
        <servlet-class>test.ForwardServletTest</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>ForwardServletTest</servlet-name>
        <url-pattern>/forwardServlet</url-pattern>
    </servlet-mapping>
    
    <!--自动登陆Servlet测试demo-->
    <servlet>
        <servlet-name>LoginServlet</servlet-name>
        <servlet-class>servlet.LoginServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>LoginServlet</servlet-name>
        <url-pattern>/userLoginServlet</url-pattern>
    </servlet-mapping>
</web-app>
